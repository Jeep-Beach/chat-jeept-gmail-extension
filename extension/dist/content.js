class l{constructor(){this.gmailDOM=null,this.floatingButton=null,this.observer=null,this.isProcessing=!1,this.init()}init(){document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>this.setup()):this.setup()}setup(){this.gmailDOM=new GmailDOM,this.createFloatingButton(),this.setupMutationObserver(),this.checkComposeBox(),this.setupMessageListener()}createFloatingButton(){const e=document.getElementById("jeepbeach-draft-button");e&&e.remove(),this.floatingButton=this.gmailDOM.createFloatingButton(),this.floatingButton.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.handleDraftRequest()}),document.body.appendChild(this.floatingButton),this.gmailDOM.toggleButtonVisibility(this.floatingButton,!1)}setupMutationObserver(){const e=document.body,t={childList:!0,subtree:!0,attributes:!1};this.observer=new MutationObserver(o=>{clearTimeout(this.checkTimeout),this.checkTimeout=setTimeout(()=>{this.checkComposeBox()},100)}),this.observer.observe(e,t)}checkComposeBox(){const t=this.gmailDOM.getActiveComposeBox()!==null;this.floatingButton&&this.gmailDOM.toggleButtonVisibility(this.floatingButton,t)}setupMessageListener(){if(typeof chrome>"u"||!chrome.runtime){console.error("Chrome runtime not available");return}try{chrome.runtime.onMessage.addListener((e,t,o)=>{try{switch(e.type){case"JB_DRAFT_RESPONSE":this.handleDraftResponse(e);break;case"JB_DRAFT_ERROR":this.handleDraftError(e);break;default:break}}catch(i){console.error("Error handling message:",i)}})}catch(e){console.error("Error setting up message listener:",e)}}async handleDraftRequest(){if(this.isProcessing){this.gmailDOM.showToast("Already processing a request...","warning");return}this.isProcessing=!0,this.floatingButton.disabled=!0,this.floatingButton.textContent="Generating...";try{if(!this.gmailDOM.getActiveComposeBox())throw new Error("No compose box found");const t=this.gmailDOM.getLastInboundMessage();if(!t)throw new Error("No email context found");console.log("Email context found:",t);const o=await this.getSettings();if(!o.apiKey)throw new Error("API key not configured. Please set it in the extension options.");console.log("Settings loaded:",{hasApiKey:!!o.apiKey,tone:o.tone,urls:o.jeepBeachUrls});try{chrome.runtime.sendMessage({type:"JB_DRAFT_REQUEST",emailContext:t,tone:o.tone,fallbackMessage:o.fallbackMessage,jeepBeachUrls:o.jeepBeachUrls,useGmailApi:o.useGmailApi,threadId:this.gmailDOM.getThreadIdFromUrl()})}catch(i){console.error("Error sending message to background:",i),this.handleDraftError({error:"Extension context invalidated. Please reload the extension."})}}catch(e){console.error("Error in handleDraftRequest:",e),this.handleDraftError({error:e.message})}}handleDraftResponse(e){if(this.isProcessing=!1,this.floatingButton.disabled=!1,this.floatingButton.textContent="ChatJeePeeTee",console.log("Received draft response:",e),e.draft){const t=this.gmailDOM.getActiveComposeBox();t?(t.textContent="",this.gmailDOM.insertTextAtCursor(t,e.draft)?this.gmailDOM.showToast("Draft inserted successfully!","success"):this.gmailDOM.showToast("Failed to insert draft","error")):this.gmailDOM.showToast("Compose box not found","error")}else this.gmailDOM.showToast("No draft generated","warning")}handleDraftError(e){this.isProcessing=!1,this.floatingButton.disabled=!1,this.floatingButton.textContent="ChatJeePeeTee";const t=e.error||"Unknown error occurred";this.gmailDOM.showToast(`Error: ${t}`,"error")}async getSettings(){return new Promise(e=>{chrome.storage.sync.get(["apiKey","tone","fallbackMessage","jeepBeachUrls","useGmailApi"],t=>{e(t)})})}destroy(){this.observer&&this.observer.disconnect(),this.floatingButton&&this.floatingButton.remove(),clearTimeout(this.checkTimeout)}}let r=null;function a(){r&&r.destroy(),r=new l}a();let n=location.href;new MutationObserver(()=>{const s=location.href;s!==n&&(n=s,setTimeout(a,1e3))}).observe(document,{subtree:!0,childList:!0});
